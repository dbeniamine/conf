#            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
#                    Version 2, December 2004
# 
# Copyright (C) 2015 Beniamine, David <David@Beniamine.net>
# Author: Beniamine, David <David@Beniamine.net>
# 
# Everyone is permitted to copy and distribute verbatim or modified
# copies of this license document, and changing it is allowed as long
# as the name is changed.
# 
#            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
#   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
# 
#  0. You just DO WHAT THE FUCK YOU WANT TO.


# Account specific settings {{{1
# need to be sourced at each account change

# Identity {{{2

set realname="David Beniamine"
set my_name="David Beniamine"

# Mailbox {{{2

# Folders {{{3
set folder="$my_maildir/$my_account"

set spoolfile=+INBOX
set record=+Sent
set postponed=+Drafts

# Put email address in status bar
set status_format="-%r-$from (%f) [Msgs:%?M?%M/?%m%?n? New:%n?%?o? Old:%o?%?d? Del:%d?%?F? Flag:%F?%?t? Tag:%t?%?p? Post:%p?%?b? Inc:%b?%?l? %l?]---(%s/%S)-%>-(%P)---"

# Signature {{{3
set signature="~/.mutt/signature-$my_account"

# Check mail current account {{{3
macro index,pager Ga "<shell-escape>xterm -e offlineimap -o -u ttyui -a $my_account &<enter>" "Check mail (current account)"

# Mu {{{2

# mu home {{{3
set my_muhome="$my_mudir/$my_account"

# Search complete maildir {{{3
macro index <F2> "<change-folder-readonly>$my_mudir/results<enter><shell-escape>mu find --threads --include-related --muhome=$my_muhome --clearlinks --linksdir=$my_mudir/results --format=links "    "mu find"
macro index <F3> "<change-folder-readonly>$my_mudir/results\n"       "display mu find results"
macro index <F4> "<shell-escape>mu index --muhome=$my_muhome --maildir=$folder<enter>"    "mu update index"
macro index <F5> "<shell-escape>~/scripts/muClean.sh<enter>"   "Clean mu results"

macro index,pager \cw "<shell-escape> ~/scripts/maildir_size.sh $folder<enter>" "Show maildir size"

# pgp signature {{{2

set pgp_replyencrypt=yes
unset pgp_autoencrypt
set pgp_verify_command="gpg -u $pgp_sign_as --no-verbose --batch --output - --verify %s %f"
#set pgp_decode_command="gpg  -u $pgp_sign_as %?p?--passphrase-fd 0? --no-verbose --batch --output - %f"
